<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>LoadRunner调试记录</title>
    <link href="/2022/04/24/LoadRunner/"/>
    <url>/2022/04/24/LoadRunner/</url>
    
    <content type="html"><![CDATA[<h6 id="Action-c-113-Error-27792-Failed-to-connect-to-server-“iecvlist-microsoft-com-443”-10051-Network-is-unreachable-MsgId-MERR-27792"><a href="#Action-c-113-Error-27792-Failed-to-connect-to-server-“iecvlist-microsoft-com-443”-10051-Network-is-unreachable-MsgId-MERR-27792" class="headerlink" title="Action.c(113): Error -27792: Failed to connect to server “iecvlist.microsoft.com:443”: [10051] Network is unreachable      [MsgId: MERR-27792]"></a>Action.c(113): Error -27792: Failed to connect to server “iecvlist.microsoft.com:443”: [10051] Network is unreachable      [MsgId: MERR-27792]</h6><p>解决： 关闭IP Spoofer</p><p><img src="C:\Users\靖儿的小小新\AppData\Roaming\Typora\typora-user-images\image-20220424110906049.png" alt="image-20220424110906049"></p>]]></content>
    
    
    
    <tags>
      
      <tag>软件测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>html</title>
    <link href="/2021/05/11/html/"/>
    <url>/2021/05/11/html/</url>
    
    <content type="html"><![CDATA[<h4 id="html-语义化"><a href="#html-语义化" class="headerlink" title="html 语义化"></a>html 语义化</h4><p>结构清晰：即使在没css情况下也以文档格式显示，并且易于阅读。</p><p>SEO（search Engine Optimization) 搜索引擎优化。有利于搜索引擎获得更多有效信息，从而提升网页搜索量。</p><p>可维护性：有利于程序员对网页diamante进行维护管理。</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>无序<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>有序<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">heade</span>&gt;</span>页眉<span class="hljs-tag">&lt;/<span class="hljs-name">heade</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>标记导航<span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>只有当父级为footer时才对整个页面起效<span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>强调<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>加粗斜体<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h4 id="标签类型"><a href="#标签类型" class="headerlink" title="标签类型"></a>标签类型</h4><h5 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h5><p>从新一行开始</p><p>高度，行高，内外边距，宽度都可控。</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h5 id="行内元素（内联元素）"><a href="#行内元素（内联元素）" class="headerlink" title="行内元素（内联元素）"></a>行内元素（内联元素）</h5><p>高、行高、内外边距、宽度不可变</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">lable</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">lable</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h5 id="空元素"><a href="#空元素" class="headerlink" title="空元素"></a>空元素</h5><p>没有闭合标签的标签</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span>/&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">img</span>/&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>/&gt;</span>    被水平线分隔的标题和段落<br><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>    可插入一个简单的换行符<br></code></pre></div></td></tr></table></figure><h3 id="标签对比"><a href="#标签对比" class="headerlink" title="标签对比"></a>标签对比</h3><p><strong> 加粗，“含有语义”的标签，表强调</p><p><b>加粗，但是没有“强调”</p><p><i>斜体不强调</p><p><em>斜体强调</p><p><img> alt  给没有加载出图片的用户提供文字信息。</p><p><img>title 图片被加载后，鼠标移上去显示的属性文字，对图片信息进行补充</p><h4 id=""><a href="#" class="headerlink" title=""></a><label></h4><p>不会向用户呈现特殊效果，但是改进了鼠标用户的可用性。点击标签时浏览器自动把焦点转到与改标签相关的表单控件上</p><h4 id="前端页面分层"><a href="#前端页面分层" class="headerlink" title="前端页面分层"></a>前端页面分层</h4><h5 id="结构层"><a href="#结构层" class="headerlink" title="结构层"></a>结构层</h5><p>表示层</p><p>行为层</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>knowloge</title>
    <link href="/2021/05/11/knowloge/"/>
    <url>/2021/05/11/knowloge/</url>
    
    <content type="html"><![CDATA[<h4 id="Javascript数据类型"><a href="#Javascript数据类型" class="headerlink" title="Javascript数据类型"></a>Javascript数据类型</h4><ul><li>boolean</li><li>number</li><li>string</li><li>null</li><li>undefine</li><li>object javascript里一切</li><li>Symbol(Es6新增，用于创建独一无二的值)</li></ul><h4 id="判断数据类型"><a href="#判断数据类型" class="headerlink" title="判断数据类型"></a>判断数据类型</h4><p>typeOf</p><h4 id="null和undefined区别"><a href="#null和undefined区别" class="headerlink" title="null和undefined区别"></a>null和undefined区别</h4><p>undefined: 变量自然的、最原始的状态值，即变量声明但未赋值</p><p>null：主动释放一个变量引用的对象，表示这个变量不再指向任何对象的地址。如果使用完对象，需要对其进行释放内存的时候，就设置为null</p><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><p>用于初始化对象的一种特殊函数，与new一起使用</p><p><strong>new在执行时会做的四件事情：</strong></p><p>在内存中创建一个空对象，让this指向这个对象，执行构造函数的代码给新对象添加属性和方法，返回这个对象</p><h5 id="构造函数原型prototype"><a href="#构造函数原型prototype" class="headerlink" title="构造函数原型prototype"></a>构造函数原型prototype</h5><p>构造函数通过原型分配的方法是所有对象共享。</p><p><em>原型是什么？</em></p><p><em>一个对象，我们称prototype为原型对象。</em></p><p><em>原型作用？</em></p><p><em>共享方法</em></p><p>对象原型  __ proto__</p><p>每个对象都会有__ proto__属性指向其构造函数的prototype原型对象。</p>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
